geom_histogram()
mean(rt_removed_testing$rt_difference)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/WoosterStuff/fall2019/IS_organized/analysis")
library(tidyverse)
library(ggthemes)
library(gridExtra)
library(patchwork)
library(ggforce)
#library(pheatmap)
library(ggpubr)
getGraphs("./allData_IS/data_mon0.csv")
getGraphs <- function(fileName){
plotFile<-read.csv(file = fileName, header=FALSE, stringsAsFactors=FALSE)[,1:2]
ticks = 2000
i<-1
j<-1
out<-data.frame(1:(ticks/10))
while(i<dim(plotFile)[1]){
if(plotFile[i,2]=="y"){
out[,plotFile[i-8,1]]<-plotFile[(i+1):(i+(ticks/10)),2]
j<- j+1
i<- i+(ticks/10)
}
i<-i+1
}
colNames <- c("K", "unsatisfied", "Payoffs", "TotalBM", "GreenPatches", "beta.i", "k.i", "numLoggers", "numCheaters", "highMinCut", "lowMinCut", "avgRTremoved")
out<-out[,-1]
colnames(out)<- colNames
for(i in 1:length(colNames)){
out[,i] <-as.numeric(out[,i])
}
return(out)
}
getGraphs("./allData_IS/data_mon0.csv")
getGraphs <- function(fileName){
plotFile<-read.csv(file = fileName, header=FALSE, stringsAsFactors=FALSE)[,1:2]
ticks = 2000
i<-1
j<-1
out<-data.frame(1:(ticks/10))
while(i<dim(plotFile)[1]){
if(plotFile[i,2]=="y"){
out[,plotFile[i-8,1]]<-plotFile[(i+1):(i+(ticks/10)),2]
j<- j+1
i<- i+(ticks/10)
}
i<-i+1
}
print(out)
colNames <- c("K", "unsatisfied", "Payoffs", "TotalBM", "GreenPatches", "beta.i", "k.i", "numLoggers", "numCheaters", "highMinCut", "lowMinCut", "avgRTremoved")
out<-out[,-1]
colnames(out)<- colNames
for(i in 1:length(colNames)){
out[,i] <-as.numeric(out[,i])
}
return(out)
}
getGraphs("./allData_IS/data_mon0.csv")
getGraphs <- function(fileName){
plotFile<-read.csv(file = fileName, header=FALSE, stringsAsFactors=FALSE)[,1:2]
print(plotFile)
ticks = 2000
i<-1
j<-1
out<-data.frame(1:(ticks/10))
while(i<dim(plotFile)[1]){
if(plotFile[i,2]=="y"){
out[,plotFile[i-8,1]]<-plotFile[(i+1):(i+(ticks/10)),2]
j<- j+1
i<- i+(ticks/10)
}
i<-i+1
}
print(out)
colNames <- c("K", "unsatisfied", "Payoffs", "TotalBM", "GreenPatches", "beta.i", "k.i", "numLoggers", "numCheaters", "highMinCut", "lowMinCut", "avgRTremoved")
out<-out[,-1]
colnames(out)<- colNames
for(i in 1:length(colNames)){
out[,i] <-as.numeric(out[,i])
}
return(out)
}
getGraphs("./allData_IS/data_mon0.csv")
getGraphs <- function(fileName){
plotFile<-read.csv(file = fileName, header=FALSE, stringsAsFactors=FALSE)[,1:2]
print(plotFile)
ticks = 2000
i<-1
j<-1
out<-data.frame(1:(ticks/10))
while(i<dim(plotFile)[1]){
if(plotFile[i,2]=="y"){
out[,plotFile[i-6,1]]<-plotFile[(i+1):(i+(ticks/10)),2]
j<- j+1
i<- i+(ticks/10)
}
i<-i+1
}
print(out)
colNames <- c("K", "unsatisfied", "Payoffs", "TotalBM", "GreenPatches", "beta.i", "k.i", "numLoggers", "numCheaters", "highMinCut", "lowMinCut", "avgRTremoved")
out<-out[,-1]
colnames(out)<- colNames
for(i in 1:length(colNames)){
out[,i] <-as.numeric(out[,i])
}
return(out)
}
getGraphs("./allData_IS/data_mon0.csv")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/WoosterStuff/fall2019/IS_organized/analysis")
library(tidyverse)
library(ggthemes)
library(gridExtra)
library(patchwork)
library(ggforce)
#library(pheatmap)
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/WoosterStuff/fall2019/IS_organized/analysis")
library(tidyverse)
library(ggthemes)
library(gridExtra)
library(patchwork)
library(ggforce)
#library(pheatmap)
library(ggpubr)
source(file="setupFile2.R")
source(file="setupVallino.R")
color="Set2"
axlab_size <- 12
axtick_size <- 10
ax_kf = expression(paste(bolditalic("final-institution")))
axlab_bm<-"Biomass (% remaining)"
axlab_density <- "Density"
axlab_time <- "Period"
axlab_perc <- "Percent remianing"
ax_sanc = expression(bolditalic(sanction-level))
ax_mon = expression(bolditalic(monitoring-level))
ax_rt=expression(bolditalic("reference-threshold"))
# make graph look nice by adding this to the end
setGraphs<- theme_bw()+
theme(axis.text=element_text(size=axtick_size, color="black"),
axis.title=element_text(size=axlab_size,face="bold", color="black"), legend.text = element_text(size=axtick_size))+
theme(panel.border = element_blank(), axis.line = element_line(colour = "black"))
#  scale_color_stata()
# scale_color_brewer(palette="Set1")
#colorDiscrete = scale_color_brewer(palette="Dark2")
colorDiscrete = scale_color_brewer(palette="Set2")
colorCont = scale_color_viridis_c(option = "magma")
#fillDiscrete = scale_fill_brewer(palette="Dark2")
fillDiscrete = scale_fill_brewer(palette="Set2")
fillCont = scale_fill_viridis_c(option = "magma")
# first two colors in Dark2
#1b9e77
#d95f02
color1="#66c2a5"
color2="#fc8d62"
color3="#8da0cb"
# scale_color_colorblind()
# scale_color_OkabeIto()
point_size = 3
line_size = 1.2
data_mon0
source('~/Documents/WoosterStuff/fall2019/IS_organized/analysis/setupFile2.R', echo=TRUE)
getGraphs_export <- function(fileName, colNames){
plotFile<-read.csv(file = fileName, header=FALSE, stringsAsFactors=FALSE)[,1:2]
ticks = 2000
i<-1
j<-1
out<-data.frame(1:(ticks/10))
while(i<dim(plotFile)[1]){
if(plotFile[i,2]=="y"){
out[,plotFile[i-6,1]]<-plotFile[(i+1):(i+(ticks/10)),2]
j<- j+1
i<- i+(ticks/10)
}
i<-i+1
}
out<-out[,-1]
colnames(out)<- colNames
for(i in 1:length(colNames)){
out[,i] <-as.numeric(out[,i])
}
return(out)
}
colNames <- c("K", "unsatisfied", "Payoffs", "TotalBM", "GreenPatches", "beta.i", "k.i", "numLoggers",
"numCheaters", "highMinCut", "lowMinCut", "meanProbCheat", "midMinCut", "LegalBM", "IllegalBM",
"PercIllegalBM", "BMPerCheating", "BMPerLogging", "PayoffCheaters", "PayoffNonCheaters", "timesCheated",
"timesLogged")
data_mon0 = getGraphs("./allData_IS/data_mon0.csv", colNames)
getGraphs_export <- function(fileName, colNames){
plotFile<-read.csv(file = fileName, header=FALSE, stringsAsFactors=FALSE)[,1:2]
ticks = 2000
i<-1
j<-1
out<-data.frame(1:(ticks/10))
while(i<dim(plotFile)[1]){
if(plotFile[i,2]=="y"){
out[,plotFile[i-6,1]]<-plotFile[(i+1):(i+(ticks/10)),2]
j<- j+1
i<- i+(ticks/10)
}
i<-i+1
}
out<-out[,-1]
colnames(out)<- colNames
for(i in 1:length(colNames)){
out[,i] <-as.numeric(out[,i])
}
return(out)
}
columnNames <- c("K", "unsatisfied", "Payoffs", "TotalBM", "GreenPatches", "beta.i", "k.i", "numLoggers",
"numCheaters", "highMinCut", "lowMinCut", "meanProbCheat", "midMinCut", "LegalBM", "IllegalBM",
"PercIllegalBM", "BMPerCheating", "BMPerLogging", "PayoffCheaters", "PayoffNonCheaters", "timesCheated",
"timesLogged")
data_mon0 = getGraphs("./allData_IS/data_mon0.csv", columnNames)
data_mon0 = getGraphs_export("./allData_IS/data_mon0.csv", columnNames)
setwd("~/Documents/WoosterStuff/fall2019/IS_organized/analysis")
data_mon0 = getGraphs_export("./allData_IS/data_mon0.csv", columnNames)
data_mon0
data_mon0$PercIllegalBM[200]
data_mon0
63/(260+63)
63/(1000)
endogInst_data = read.csv("./allData_IS/endogInst_data_7_18.csv")
endogInst_data = endogInst_data%>%mutate(Period = 1:2001)
instChange = 15
maxBM = endogInst_run_data$TotalBM[1]
endogInst_data = read.csv("./allData_IS/endogInst_data_7_18.csv")
endogInst_data = endogInst_data%>%mutate(Period = 1:2001)
instChange = 15
maxBM = endogInst_data$TotalBM[1]
endogInst_data = endogInst_data%>%mutate(TotalBM = TotalBM/maxBM)
endogInst_run_data = endogInst_data%>%filter(Period <= 200)
ax_k = expression(paste(bolditalic("current-institution")))
v1b<-endogInst_run_data%>%ggplot(aes(x=Period))+
geom_path(aes(y=K),  size=line_size)+
labs(x=element_blank(), y=ax_k)+
geom_vline(xintercept = instChange, linetype="dashed", color="dimgrey")+
ylim(0,20)+
setGraphs
ax = expression(bold(paste("Avg. ", bolditalic("minimal-cut"))))
v2b<-endogInst_run_data%>%ggplot(aes(x=Period))+
geom_path(aes(y=k.i),  size=line_size)+
geom_vline(xintercept = instChange, linetype="dashed", color="dimgrey")+
labs(x=element_blank(), y=ax)+
ylim(0,20)+
setGraphs
ax = expression(bold(paste("Avg. ", bolditalic("reference-trees"))))
v3b<-endogInst_run_data%>%ggplot(aes(x=Period))+
geom_path(aes(y=beta.i),  size=line_size)+
geom_vline(xintercept = instChange, linetype="dashed", color="dimgrey")+
labs(x="", y=ax)+
ylim(0,1)+
setGraphs
v4b<-endogInst_run_data%>%ggplot(aes(x=Period))+
geom_path(aes(y=TotalBM*100),  size=line_size)+
geom_vline(xintercept = instChange, linetype="dashed", color="dimgrey")+
labs(x="", y=axlab_bm)+
ylim(0,100)+
setGraphs
v5b <- endogInst_run_data%>%ggplot(aes(x = Period))+
geom_path(aes(y = highMinCut),  size=line_size)+
geom_path(aes(y = lowMinCut),  size=line_size, color = "green")+
geom_path(aes(y = 100 - lowMinCut - highMinCut),  size=line_size, color = "blue")+
geom_vline(xintercept = instChange, linetype="dashed", color="dimgrey")+
labs(x="", y="Loggers (% Total)")+
ylim(0,100)+
setGraphs
v6b <- endogInst_run_data%>%ggplot(aes(x = Period))+
#geom_path(aes(y = loggers30Periods),  size=line_size, color = "grey")+
geom_path(aes(y = highMC30Periods/loggers30Periods*100),  size=line_size)+
geom_path(aes(y = lowMC30Periods/loggers30Periods*100),  size=line_size, color = "green")+
geom_path(aes(y = (loggers30Periods - highMC30Periods - lowMC30Periods)/loggers30Periods*100),  size=line_size, color = "blue")+
geom_vline(xintercept = instChange, linetype="dashed", color="dimgrey")+
labs(x="", y="Loggers (% Not Replaced in 30 Periods)")+
ylim(0,100)+
setGraphs
viz_bravo=grid.arrange(v1b+ggtitle("a)"), v2b+ggtitle("b)"), v4b+ggtitle("c)"), v3b+ggtitle("d)"), nrow=2)
viz_bravo=annotate_figure(viz_bravo,
bottom = text_grob(expression(bold(Period)), vjust = 0,  size = axlab_size),
)
ggsave("./figs/viz_bravo2.pdf", viz_bravo, width=5.75, height=8, units="in")
v5b
v5b+ xlab("Period")
logData
dataLog
View(dataLog)
t = dataLog[[8]][[1]]
t%>%ggplot(aes(x = 1:200, y = K))+
geom_path()
t%>%ggplot(aes(x = 1:200, y = numLoggers))+
geom_path()
t = vallino_dataLog[[8]][[1]]
View(vallino_dataLog)
t = vallino_dataLog[[6]][[1]]
t%>%ggplot(aes(x = 1:200, y = numLoggers))+
geom_path()
t%>%ggplot(aes(x = 1:200, y = TotalBM))+
geom_path()
t%>%ggplot(aes(x = 1:200, y = K))+
geom_path()
t = vallino_dataLog[[6]][[2]]
t%>%ggplot(aes(x = 1:200, y = K))+
geom_path()
t%>%ggplot(aes(x = 1:200, y = TotalBM))+
geom_path()
t%>%ggplot(aes(x = 1:200, y = K))+
geom_path()
View(vallino_dataLog)
inst = vallino_dataLog[[6]][[2]]
noInst = vallino_dataLog[[6]][[1]]
View(vallino_dataLog)
inst%>%ggplot(aes(x = 1:200, y = K))+
geom_path()
noInst%>%ggplot(aes(x = 1:200, y = K))+
geom_path()
inst = vallino_dataLog[[6]][[2]]
noInst = vallino_dataLog[[6]][[1]]
inst%>%ggplot(aes(x = 1:200, y = numLoggers))+
geom_path()
noInst%>%ggplot(aes(x = 1:200, y = numLoggers))+
geom_path()
inst = vallino_dataLog[[6]][[2]]
noInst = vallino_dataLog[[6]][[1]]
inst%>%ggplot(aes(x = 1:200, y = TotalBM))+
geom_path()
noInst%>%ggplot(aes(x = 1:200, y = TotalBM))+
geom_path()
inst = vallino_dataLog[[6]][[2]]
noInst = vallino_dataLog[[6]][[1]]
inst%>%ggplot(aes(x = 1:200, y = numCheaters))+
geom_path()
noInst%>%ggplot(aes(x = 1:200, y = numCheaters))+
geom_path()
inst%>%ggplot(aes(x = 1:200, y = numLoggers))+
geom_path()
noInst%>%ggplot(aes(x = 1:200, y = numLoggers))+
geom_path()
inst%>%ggplot(aes(x = 1:200, y = K))+
geom_path()
inst%>%ggplot(aes(x = 1:200, y = K))+
geom_path()+
geom_vline(xintercept = 10)
inst%>%ggplot(aes(x = 1:200, y = K))+
geom_path()+
geom_vline(xintercept = 5)
inst%>%ggplot(aes(x = 1:200, y = K))+
geom_path()+
geom_vline(xintercept = 3)
inst%>%ggplot(aes(x = 1:200, y = K))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
inst%>%ggplot(aes(x = 1:200, y = numLoggers))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:200, y = numLoggers))+
geom_path()
inst%>%ggplot(aes(x = 1:200, y = TotalBM))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:200, y = TotalBM))+
geom_path()
inst%>%ggplot(aes(x = 1:200, y = k.i))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:200, y = k.i))+
geom_path()
inst%>%ggplot(aes(x = 1:200, y = beta.i))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:200, y = beta.i))+
geom_path()
View(vallino_dataLog)
inst%>%ggplot(aes(x = 1:200, y = unsatisfied))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:200, y = unsatisfied))+
geom_path()
inst%>%ggplot(aes(x = 1:200, y = Payoffs))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:200, y = Payoffs))+
geom_path()
inst%>%ggplot(aes(x = 1:200, y = numLoggers))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:200, y = numLoggers))+
geom_path()
inst%>%ggplot(aes(x = 1:200, y = unsatisfied))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:200, y = unsatisfied))+
geom_path()
inst%>%ggplot(aes(x = 1:200, y = k.i))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:200, y = k.i))+
geom_path()
logData_vallino%>%filter(variableValue == 300, K>=1)
inst = vallino_dataLog[[6]][[4]]
noInst = vallino_dataLog[[6]][[1]]
inst%>%ggplot(aes(x = 1:200, y = numCheaters))+
geom_path()
noInst%>%ggplot(aes(x = 1:200, y = numCheaters))+
geom_path()
inst%>%ggplot(aes(x = 1:200, y = numLoggers))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:200, y = numLoggers))+
geom_path()
inst%>%ggplot(aes(x = 1:200, y = k.i))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:200, y = k.i))+
geom_path()
inst = vallino_dataLog[[6]][[4]]
noInst = vallino_dataLog[[6]][[2]]
inst%>%ggplot(aes(x = 1:200, y = numCheaters))+
geom_path()
noInst%>%ggplot(aes(x = 1:200, y = numCheaters))+
geom_path()
inst%>%ggplot(aes(x = 1:200, y = numLoggers))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:200, y = numLoggers))+
geom_path()
inst%>%ggplot(aes(x = 1:200, y = k.i))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:200, y = k.i))+
geom_path()
inst = vallino_dataLog[[6]][[4]][1:20]
inst = vallino_dataLog[[6]][[4]]%>%head(20)
noInst = vallino_dataLog[[6]][[2]]
inst%>%ggplot(aes(x = 1:200, y = numCheaters))+
geom_path()
inst = vallino_dataLog[[6]][[4]]%>%head(20)
noInst = vallino_dataLog[[6]][[2]]%>%head(20)
inst%>%ggplot(aes(x = 1:20, y = numCheaters))+
geom_path()
noInst%>%ggplot(aes(x = 1:20, y = numCheaters))+
geom_path()
inst%>%ggplot(aes(x = 1:20, y = numLoggers))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:20, y = numLoggers))+
geom_path()
inst%>%ggplot(aes(x = 1:20, y = k.i))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:20, y = k.i))+
geom_path()
inst = vallino_dataLog[[6]][[4]]%>%head(20)
noInst = vallino_dataLog[[6]][[1]]%>%head(20)
inst%>%ggplot(aes(x = 1:20, y = numCheaters))+
geom_path()
noInst%>%ggplot(aes(x = 1:20, y = numCheaters))+
geom_path()
inst%>%ggplot(aes(x = 1:20, y = numLoggers))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:20, y = numLoggers))+
geom_path()
inst%>%ggplot(aes(x = 1:20, y = k.i))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:20, y = k.i))+
geom_path()
inst = vallino_dataLog[[6]][[4]]%>%head(20)
noInst = vallino_dataLog[[6]][[1]]%>%head(20)
inst%>%ggplot(aes(x = 1:20, y = K))+
geom_path()
noInst%>%ggplot(aes(x = 1:20, y = K))+
geom_path()
inst%>%ggplot(aes(x = 1:20, y = numCheaters))+
geom_path()
noInst%>%ggplot(aes(x = 1:20, y = numCheaters))+
geom_path()
inst%>%ggplot(aes(x = 1:20, y = numLoggers))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:20, y = numLoggers))+
geom_path()
inst%>%ggplot(aes(x = 1:20, y = k.i))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:20, y = k.i))+
geom_path()
inst = vallino_dataLog[[6]][[4]]%>%head(20)
noInst = vallino_dataLog[[6]][[1]]%>%head(20)
inst%>%ggplot(aes(x = 1:20, y = K))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:20, y = K))+
geom_path()
inst%>%ggplot(aes(x = 1:20, y = numCheaters))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:20, y = numCheaters))+
geom_path()
inst%>%ggplot(aes(x = 1:20, y = numLoggers))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:20, y = numLoggers))+
geom_path()
inst%>%ggplot(aes(x = 1:20, y = k.i))+
geom_path()+
geom_vline(xintercept = 3, color = "grey")
noInst%>%ggplot(aes(x = 1:20, y = k.i))+
geom_path()

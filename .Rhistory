labs(x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs#+colorDiscrete
viz_surv
unique(allData_revised$param)
plot_ms = allData_revised %>% mutate(lowLoggers = (param == "log" && as.numeric(variableValue) <= 80))
viz_surv = plot_ms %>% ggplot(aes(x = K, y = TotalBM*100, color = lowLoggers))+
geom_point(size = 2)+
labs(x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs#+colorDiscrete
viz_surv
allData_revised$variableValue <10
plot_ms = allData_revised %>% mutate(lowLoggers = (param == "log" && as.character(as.numeric(variableValue)) <= 80))
viz_surv = plot_ms %>% ggplot(aes(x = K, y = TotalBM*100, color = lowLoggers))+
geom_point(size = 2)+
labs(x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs#+colorDiscrete
viz_surv
plot_ms = allData_revised %>% mutate(lowLoggers = (param == "log"))
viz_surv = plot_ms %>% ggplot(aes(x = K, y = TotalBM*100, color = lowLoggers))+
geom_point(size = 2)+
labs(x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs#+colorDiscrete
viz_surv
plot_ms = allData_revised %>% mutate(lowLoggers = param == "log" & (variableValues == "60" | variableValues == "80"))
viz_surv = plot_ms %>% ggplot(aes(x = K, y = TotalBM*100, color = lowLoggers))+
geom_point(size = 2)+
labs(x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs#+colorDiscrete
viz_surv
plot_ms = allData_revised %>% mutate(lowLoggers = param == "log" & (variableValue == "60" | variableValue == "80"))
viz_surv = plot_ms %>% ggplot(aes(x = K, y = TotalBM*100, color = lowLoggers))+
geom_point(size = 2)+
labs(x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs#+colorDiscrete
viz_surv
plot_ms = allData_revised %>% mutate(lowLoggers = param == "log" & (variableValue == "60" | variableValue == "80"))
viz_surv = plot_ms %>% ggplot(aes(x = K, y = TotalBM*100, color = lowLoggers))+
geom_point(size = 2)+
labs(x = "Loggers (% remaining)", y = axlab_bm)+
scale_color_manual(breaks=c(TRUE, FALSE), labels = c("60 Loggers", "All other parameter sets"), values=c(color1, color2))+
setGraphs#+colorDiscrete
viz_surv
plot_ms = allData_revised %>% mutate(lowLoggers = param == "log" & (variableValue == "60" | variableValue == "80"))
viz_surv = plot_ms %>% ggplot(aes(x = K, y = TotalBM*100, color = lowLoggers))+
geom_point(size = 2)+
labs(x = "Loggers (% remaining)", y = axlab_bm, color = "")+
scale_color_manual(breaks=c(TRUE, FALSE), labels = c("60 or 80 Loggers", "All other parameter sets"), values=c(color1, color2))+
setGraphs#+colorDiscrete
viz_surv
enfGraph=enfData_vallino%>%mutate(enfValue=rev(as.factor((as.numeric(variableValue)-1)/10)))
viz_surv = enfGraph%>% filter(enfValue == 0.2|enfValue == 0.8)%>%ggplot(aes(x = numLoggers*100, y = TotalBM*100))+
geom_point(aes(color = enfValue), size = 2)+
labs(color = ax_mon, x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs+
colorDiscrete
viz_surv
if(savePlots) ggsave("./figs/viz_vallino_mon.pdf", viz_surv, width=5.75, height=3, units="in")
fig = fig+1
enfGraphCorrected=enfData_vallinoCorrected%>%mutate(enfValue=rev(as.factor((as.numeric(variableValue)-1)/10)))
viz_surv = enfGraphCorrected %>% filter(enfValue !=0)%>%ggplot(aes(x = numLoggers*100, y = TotalBM*100, color = enfValue))+
geom_point(aes(color = enfValue), size = 2)+
labs(color = ax_mon, x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs#+colorDiscrete
viz_surv
if(savePlots) ggsave("./figs/viz_vallino_mon.pdf", viz_surv, width=5.75, height=3, units="in")
fig = fig+1
plot_ms = allData_revised %>% mutate(lowLoggers = param == "log" & (variableValue == "60" | variableValue == "80"))
viz_ms_KBM = plot_ms %>% ggplot(aes(x = K, y = TotalBM*100, color = lowLoggers))+
geom_point(size = 2)+
labs(x = ax_kf, y = axlab_bm, color = "")+
scale_color_manual(breaks=c(TRUE, FALSE), labels = c("60 or 80 Loggers", "All other parameter sets"), values=c(color1, color2))+
setGraphs#+colorDiscrete
viz_surv
if(savePlots) ggsave("./figs/viz_vallino_mon.pdf", viz_surv, width=5.75, height=3, units="in")
fig = fig+1
plot_ms = allData_revised %>% mutate(lowLoggers = param == "log" & (variableValue == "60" | variableValue == "80"))
viz_ms_KBM = plot_ms %>% ggplot(aes(x = K, y = TotalBM*100, color = lowLoggers))+
geom_point(size = 2)+
labs(x = ax_kf, y = axlab_bm, color = "")+
scale_color_manual(breaks=c(TRUE, FALSE), labels = c("60 or 80 Loggers", "All other parameter sets"), values=c(color1, color2))+
setGraphs#+colorDiscrete
viz_ms_KBM
if(savePlots) ggsave("./figs/viz_vallino_mon.pdf", viz_ms_KBM, width=5.75, height=3, units="in")
fig = fig+1
# create column for loggers == 60 for plot color
allData_plotK_BM<-allData%>%mutate(logger60= ((param=="log") & (variableValue==60)))
kBM_allData_plot<-allData_plotK_BM%>%ggplot(aes(K, TotalBM*100, color=logger60))+
geom_point(size = 1)+
xlim(0,20)+ ylim(0,45)+
setGraphs +
scale_color_manual(breaks=c(TRUE, FALSE), labels = c("60 Loggers", "All other parameter sets"), values=c(color1, color2))+
theme(legend.title = element_blank())+
labs(y=axlab_bm, x=ax_kf)+
guides(color = guide_legend(override.aes = list(size = 3)))
kBM_allData_plot
#grid.arrange(kBM_allData_plot2, kBM_allData_plot)
if(savePlots) ggsave("./figs/viz_kBM_allData.pdf", kBM_allData_plot, width=5, height=2.5, units="in")
fig = fig + 1
#calculating number of meetings for each simulation
# find max K for each simulation
x<-maxK(dataRT, seq(1,10, by=1), 2000, 50)
#jumps_test<-findKJumps(dataRT, seq(1,10, by=1), 2000, 50)
numberJumps<-findKJumps(dataRT, seq(1,10, by=1), 2000, 50)
whenFinalJump<-findFinalKJumps(dataRT, seq(1,10, by=1), 2000, 50)
numberJumps2<-numberJumps%>%gather(key="variableValue", value=variableOfInterest)%>%separate(col = variableValue, into = c("type", "variableValue"))
jumpDF<-data.frame(maxK=x, jumps=numberJumps2$variableOfInterest, K=rtData$K, TotalBM=rtData$TotalBM, variableValue=rtData$variableValue, cheaters=rtData$numCheaters)
whenFinalJump2<-whenFinalJump%>%gather(key="variableValue", value=variableOfInterest)%>%separate(col = variableValue, into = c("type", "variableValue"))
rtJumpData<-data.frame(maxK=x, numJumps = numberJumps2$variableOfInterest, finalJump=whenFinalJump2$variableOfInterest, K=rtData$K, TotalBM=rtData$TotalBM, variableValue=rtData$variableValue, cheaters=rtData$numCheaters)
rtJumpData<- rtJumpData%>%mutate(recentMeeting = finalJump>20)
rtJumpData<- rtJumpData%>%mutate(jumpCat = ifelse(as.numeric(numJumps)<2,"once", ifelse(as.numeric(numJumps)<3, "twice","3+ times")))%>%mutate(jumpCat=factor(jumpCat))
# with recent meetings
# viz_rt_jump=rtJumpData%>%ggplot(aes(x = as.numeric(variableValue)/10, y = K, color=jumpCat))+
#   geom_point(aes(shape=recentMeeting, size=recentMeeting), position="jitter")+
#   geom_smooth(method='lm', se = FALSE, show.legend = FALSE)+
#   scale_color_brewer(palette="Set2",breaks=c("once", "twice", "3+ times"),name="Number of meetings", labels = c("1", "2", "3+"))+
#   scale_shape(name="", breaks=c(TRUE, FALSE), labels=c("Recent meeting", "No recent meeting"))+
#   scale_size_manual(breaks=c(TRUE, FALSE), values=c(2.5,1.5))+
#   labs(x=ax_rt, y=ax_kf)+
#   setGraphs+
#   guides(color = guide_legend(override.aes = list(size = 3)), shape = guide_legend(override.aes = list(size = 3)), size=FALSE)
# no recent meetings
viz_rt_jump=rtJumpData%>%ggplot(aes(x = as.numeric(variableValue)/10, y = K, color=jumpCat))+
geom_point(position="jitter")+
geom_smooth(data = rtJumpData%>%filter(jumpCat !="once"), method='lm', se = FALSE, show.legend = FALSE)+ #get rid of data = argument to include regression line for communities that have only met once
scale_color_brewer(palette="Set2",breaks=c("once", "twice", "3+ times"),name="Number of meetings", labels = c("1", "2", "3+"))+
labs(x=ax_rt, y=ax_kf)+
setGraphs+
guides(color = guide_legend(override.aes = list(size = 3)))
viz_rt_jump
if(savePlots) ggsave("./figs/viz_rtJump_removeRedRegression.pdf", viz_rt_jump, width=5.75, height=3, units="in")
fig = fig+1
#monitoring plot
viz_mon_2_8 = monitoringData%>% filter(variableValue == 0.2| variableValue == 0.8)%>%ggplot(aes(x= K, y = TotalBM*100))+
geom_point(aes(color = variableValue))+
labs(color = ax_mon)+
ylab(axlab_bm)+
xlab(ax_kf)+
setGraphs+
colorDiscrete+
#ylim(0,23)+
#xlim(7.5,15)+
theme(legend.position="bottom")
# sanctioning plot
#viz_sanc_2_8 = sanctionData%>% filter(variableValue == 2| variableValue == 8)%>%ggplot(aes(x= K, y = TotalBM*100))+
viz_sanc_2_8 = sanctionData%>% filter(variableValue == 2| variableValue == 8)%>%ggplot(aes(x= K, y = TotalBM*100))+
geom_point(aes(color = as.factor(as.numeric(as.character(variableValue))/10)))+
labs(color = ax_sanc)+
ylab(axlab_bm)+
xlab(ax_kf)+
setGraphs+
colorDiscrete+
#ylim(4,21)+
#xlim(7.5,15)+
theme(legend.position="bottom")
viz_monSanc_2_8=grid.arrange(arrangeGrob(arrangeGrob(viz_mon_2_8+ggtitle("a)"),viz_sanc_2_8+ggtitle("b)"), ncol=2, nrow=1)))
if(savePlots) ggsave("./figs/viz_monSanc.2.8.pdf", viz_monSanc_2_8, width=6.5, height=3, units="in")
fig = fig+1
#monitoring plot
viz_mon_2_8 = monitoringData_revised%>% filter(variableValue == 0.2| variableValue == 0.8)%>%ggplot(aes(x= K, y = TotalBM*100))+
geom_point(aes(color = variableValue))+
labs(color = ax_mon)+
ylab(axlab_bm)+
xlab(ax_kf)+
setGraphs+
colorDiscrete+
#ylim(0,23)+
#xlim(7.5,15)+
theme(legend.position="bottom")
# sanctioning plot
#viz_sanc_2_8 = sanctionData%>% filter(variableValue == 2| variableValue == 8)%>%ggplot(aes(x= K, y = TotalBM*100))+
viz_sanc_2_8 = sanctionData_revised%>% filter(variableValue == 2| variableValue == 8)%>%ggplot(aes(x= K, y = TotalBM*100))+
geom_point(aes(color = as.factor(as.numeric(as.character(variableValue))/10)))+
labs(color = ax_sanc)+
ylab(axlab_bm)+
xlab(ax_kf)+
setGraphs+
colorDiscrete+
#ylim(4,21)+
#xlim(7.5,15)+
theme(legend.position="bottom")
viz_monSanc_2_8=grid.arrange(arrangeGrob(arrangeGrob(viz_mon_2_8+ggtitle("a)"),viz_sanc_2_8+ggtitle("b)"), ncol=2, nrow=1)))
if(savePlots) ggsave("./figs/viz_monSanc.2.8.pdf", viz_monSanc_2_8, width=6.5, height=3, units="in")
fig = fig+1
View(allData_revised)
# calculate correlations
corr_base = round(cor(baseData$TotalBM, baseData$K), 3)
corr_all = round(cor(allData$TotalBM, allData$K), 3)
corr_all_logNot60 = round(cor((plot_ms%>%filter(!lowLoggers))$TotalBM, (allData_plotK_BM%>%filter(!logger60))$K)
, 3)
# calculate correlations
corr_base = round(cor(baseData$TotalBM, baseData$K), 3)
corr_all = round(cor(allData$TotalBM, allData$K), 3)
corr_all_logNot60 = round(cor((plot_ms%>%filter(!lowLoggers))$TotalBM, (allData_plotK_BM%>%filter(!lowLoggers))$K)
, 3)
# calculate correlations
corr_base = round(cor(baseData$TotalBM, baseData$K), 3)
corr_all = round(cor(allData$TotalBM, allData$K), 3)
corr_all_logNot60 = round(cor((plot_ms%>%filter(!lowLoggers))$TotalBM, (plot_ms%>%filter(!lowLoggers))$K)
, 3)
print(paste("Correlation for base data:", corr_base))
print(paste("Correlation for all data:", corr_all))
print(paste("Correlation for all data, excluding simulations starting with 60 Loggers:", corr_all_logNot60))
mean(check_steadstate$k.i)
mean(check_steadstate$k.i%>%filter(Period >17))
check_steadstate
check_steadstate[1:20]
check_steadstate[1:20,]
maxBM = endogInst_data$TotalBM[1] # initial BM in the simulation
endogInst_data = endogInst_data%>%mutate(TotalBM = TotalBM/maxBM) # convert Total BM to % remaining
check_steadstate = endogInst_data%>%filter(Period >= 200) # filter out beginning of simulation
mean(check_steadstate$TotalBM)
sd(check_steadstate$TotalBM)
mean(check_steadstate$k.i)
mean(check_steadstate$beta.i)
instChange = 17 # to make verticle line where institution changes (17 is for this specific simulation run. may be different for a different simulation run)
maxBM = endogInst_data$TotalBM[1] # initial BM in the simulation
endogInst_data = endogInst_data%>%mutate(TotalBM = TotalBM/maxBM) # convert Total BM to % remaining
endogInst_run_data = endogInst_data%>%filter(Period <= 500) # filter out beginning of simulation
# plot of K
v1b<-endogInst_run_data%>%ggplot(aes(x=Period))+
geom_path(aes(y=K),  size=line_size)+
labs(x=element_blank(), y=ax_k)+
geom_vline(xintercept = instChange, linetype="dashed", color="dimgrey")+
ylim(0,20)+
setGraphs
# plot of average minimal-cut
ax = expression(bold(paste("Avg. ", bolditalic("minimal-cut"))))
v2b<-endogInst_run_data%>%ggplot(aes(x=Period))+
geom_path(aes(y=k.i),  size=line_size)+
geom_vline(xintercept = instChange, linetype="dashed", color="dimgrey")+
labs(x=element_blank(), y=ax)+
ylim(0,20)+
setGraphs
# plot of average reference-trees
ax = expression(bold(paste("Avg. ", bolditalic("reference-trees"))))
v3b<-endogInst_run_data%>%ggplot(aes(x=Period))+
geom_path(aes(y=beta.i),  size=line_size)+
geom_vline(xintercept = instChange, linetype="dashed", color="dimgrey")+
labs(x="", y=ax)+
ylim(0,1)+
setGraphs
# plot of BM%
v4b<-endogInst_run_data%>%ggplot(aes(x=Period))+
geom_path(aes(y=TotalBM*100),  size=line_size)+
geom_vline(xintercept = instChange, linetype="dashed", color="dimgrey")+
labs(x="", y=axlab_bm)+
ylim(0,100)+
setGraphs
# join plots into one figure
viz_bravo=grid.arrange(v1b+ggtitle("a)"), v2b+ggtitle("b)"), v4b+ggtitle("c)"), v3b+ggtitle("d)"), nrow=2)
viz_bravo=annotate_figure(viz_bravo,
bottom = text_grob(expression(bold(Period)), vjust = 0,  size = axlab_size),
)
if(savePlots) ggsave("./figs/viz_bravo2.pdf", viz_bravo, width=5.75, height=4, units="in")
fig = fig+1
maxBM = endogInst_data$TotalBM[1] # initial BM in the simulation
endogInst_data = endogInst_data%>%mutate(TotalBM = TotalBM/maxBM) # convert Total BM to % remaining
check_steadstate = endogInst_data%>%filter(Period >= 200) # filter out beginning of simulation
mean(check_steadstate$TotalBM)
sd(check_steadstate$TotalBM)
mean(check_steadstate)
mean(check_steadstate$k.i)
sd(check_steadstate$k.i)
mean(check_steadstate$k.i)
sd(check_steadstate$k.i)
mean(check_steadstate$k)
sd(check_steadstate$k)
sd(check_steadstate$k)
mean(check_steadstate$k)
sd(check_steadstate$k)
mean(check_steadstate$K)
sd(check_steadstate$K)
mean(check_steadstate$K)
mean(check_steadstate$TotalBM)
sd(check_steadstate$TotalBM)
max(mincut_bravo30%>%filter(MC.level == midMC30))
max(mincut_bravo30%>%filter(MC.level == "midMC30"))
View(mean(check_steadstate$TotalBM)
sd(check_steadstate$TotalBM))
View(mincut_bravo30)
max(mincut_bravo30%>%filter(MC.level == "midMC30"))
max(mincut_bravo30%>%filter(MC.level == "midMC30")$numLogMC)
max((mincut_bravo30%>%filter(MC.level == "midMC30"))$numLogMC)
((mincut_bravo30%>%filter(MC.level == "midMC30"))$numLogMC)
mincut_bravo30%>%filter(MC.level == "midMC30")
(mincut_bravo30%>%filter(MC.level == "midMC30"))$NumLogMC
max((mincut_bravo30%>%filter(MC.level == "midMC30"))$NumLogMC)
baseData_vallinoCorrected%>%summarize(mean(TotalBM))
# make variable to color code exceptions to Kf = 0
allData1_vallino<-allData_vallino%>%mutate(categories=ifelse(variableValue==300, "log300", ifelse(param=="enf" & variableValue==100, "enf100", 0)))
viz_vallinoKf=allData1_vallino%>%ggplot(aes(K, TotalBM*100, color=categories))+
geom_point(alpha=0.7, size=2)+
setGraphs+
labs(x=ax_kf, y=axlab_bm)+
scale_color_brewer(palette="Set2", name="test", breaks=c("log300", "enf100", "0"), labels=c(expression(paste(italic("initial-loggers"), " = 300")), expression(paste(italic("monitoring-level"), " = 0")), "All other parameter sets"))+
#colorDiscrete+
theme(legend.title=element_blank())
viz_vallinoKf
if(savePlots) ggsave("./figs/viz_vallinoKf.pdf", viz_vallinoKf, width=5.75, height=3, units="in")
fig = fig+1
vallinoCorrected_lm_data = enfData_vallinoCorrected%>%mutate(monLevel = (1-as.numeric(as.character(variableValue))/100), anyEnf = ifelse(monLevel!=0, TRUE, FALSE))
vallinoCorrected_lm = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallinoCorrected_lm_data)
summary(vallinoCorrected_lm)
vallinoCorrected_lm2 = lm(TotalBM*100 ~ numLoggers+K+anyEnf+monLevel, data = vallinoCorrected_lm_data)
summary(vallinoCorrected_lm2)
vallinoCorrected_lm = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallinoCorrected_lm_data)
summary(vallinoCorrected_lm)
vallinoCorrected_lm2 = lm(TotalBM*100 ~ numLoggers+K+anyEnf+monLevel, data = vallinoCorrected_lm_data%>%filter(anyEnf))
summary(vallinoCorrected_lm2)
vallinoCorrected_lm_data = enfData_vallinoCorrected%>%mutate(monLevel = (1-as.numeric(as.character(variableValue))/100), anyEnf = ifelse(monLevel!=0, TRUE, FALSE))
vallinoCorrected_lm = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallinoCorrected_lm_data)
summary(vallinoCorrected_lm)
vallinoCorrected_lm2 = lm(TotalBM*100 ~ numLoggers+K+anyEnf+monLevel, data = vallinoCorrected_lm_data%>%filter(anyEnf))
summary(vallinoCorrected_lm2)
vallinoCorrected_lm_data = enfData_vallinoCorrected%>%mutate(monLevel = (1-as.numeric(as.character(variableValue))/100), anyEnf = ifelse(monLevel!=0, TRUE, FALSE))
vallinoCorrected_lm = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallinoCorrected_lm_data)
summary(vallinoCorrected_lm)
vallinoCorrected_lm2 = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallinoCorrected_lm_data%>%filter(anyEnf))
summary(vallinoCorrected_lm2)
vallinoCorrected_lm_data = enfData_vallinoCorrected%>%mutate(monLevel = (1-as.numeric(as.character(variableValue))/100), anyEnf = ifelse(monLevel!=0, TRUE, FALSE))
vallinoCorrected_lm = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallinoCorrected_lm_data)
summary(vallinoCorrected_lm)
vallinoCorrected_lm2 = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallinoCorrected_lm_data%>%filter(anyEnf))
summary(vallinoCorrected_lm2)
vallinoCorrected_lm4 = lm(TotalBM*100 ~ numLoggers, data = vallinoCorrected_lm_data%>%filter(anyEnf))
summary(vallinoCorrected_lm2)
vallinoCorrected_lm_data = enfData_vallinoCorrected%>%mutate(monLevel = (1-as.numeric(as.character(variableValue))/100), anyEnf = ifelse(monLevel!=0, TRUE, FALSE))
vallinoCorrected_lm = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallinoCorrected_lm_data)
summary(vallinoCorrected_lm)
vallinoCorrected_lm2 = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallinoCorrected_lm_data%>%filter(anyEnf))
summary(vallinoCorrected_lm2)
vallinoCorrected_lm4 = lm(TotalBM*100 ~ numLoggers, data = vallinoCorrected_lm_data)
summary(vallinoCorrected_lm2)
vallinoCorrected_lm_data = enfData_vallinoCorrected%>%mutate(monLevel = (1-as.numeric(as.character(variableValue))/100), anyEnf = ifelse(monLevel!=0, TRUE, FALSE))
vallinoCorrected_lm = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallinoCorrected_lm_data)
summary(vallinoCorrected_lm)
vallinoCorrected_lm2 = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallinoCorrected_lm_data%>%filter(anyEnf))
summary(vallinoCorrected_lm2)
vallinoCorrected_lm4 = lm(TotalBM*100 ~ numLoggers, data = vallinoCorrected_lm_data%>%filter(anyEnf))
summary(vallinoCorrected_lm4)
vallinoCorrected_lm4 = lm(TotalBM*100 ~ numLoggers, data = vallinoCorrected_lm_data)
summary(vallinoCorrected_lm4)
vallinoCorrected_lm4 = lm(TotalBM*100 ~ numLoggers, data = vallinoCorrected_lm_data)
summary(vallinoCorrected_lm4)
vallinoCorrected_lm_data = enfData_vallinoCorrected%>%mutate(monLevel = (1-as.numeric(as.character(variableValue))/100), anyEnf = ifelse(monLevel!=0, TRUE, FALSE))
vallinoCorrected_lm = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallinoCorrected_lm_data)
summary(vallinoCorrected_lm)
vallinoCorrected_lm2 = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallinoCorrected_lm_data%>%filter(anyEnf))
summary(vallinoCorrected_lm2)
# calculate correlations
corr_base = round(cor(baseData$TotalBM, baseData$K), 3)
corr_all = round(cor(allData$TotalBM, allData$K), 3)
corr_all_logNot60 = round(cor((plot_ms%>%filter(!lowLoggers))$TotalBM, (plot_ms%>%filter(!lowLoggers))$K)
, 3)
print(paste("Correlation for base data:", corr_base))
print(paste("Correlation for all data:", corr_all))
print(paste("Correlation for all data, excluding simulations starting with 60 Loggers:", corr_all_logNot60))
# calculate correlations
corr_base = round(cor(baseData_corrected$TotalBM, baseData$K), 3)
# calculate correlations
corr_base = round(cor(baseData_revised$TotalBM, baseData_revised$K), 3)
corr_all = round(cor(allData_revised$TotalBM, allData_revised$K), 3)
corr_all_logNot60 = round(cor((plot_ms%>%filter(!lowLoggers))$TotalBM, (plot_ms%>%filter(!lowLoggers))$K)
, 3)
print(paste("Correlation for base data:", corr_base))
print(paste("Correlation for all data:", corr_all))
print(paste("Correlation for all data, excluding simulations starting with 60 Loggers:", corr_all_logNot60))
vallino_lm_data = enfData_vallino%>%mutate(monLevel = (1-as.numeric(as.character(variableValue))/100))
vallino_lm = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallino_lm_data)
summary(vallino_lm)
vallino_lm2 = lm(TotalBM*100 ~ numLoggers+monLevel, data = vallino_lm_data%>%filter(monLevel != 0))
summary(vallino_lm2)
monitoring_lm = lm(TotalBM*100 ~ K+as.numeric(as.character(variableValue)), data = monitoringData)
summary(monitoring_lm)
sanction_lm = lm(TotalBM*100 ~ K+as.numeric(as.character(variableValue)), data = sanctionData)
summary(sanction_lm)
mon_sanc_data = allData%>%filter(param == "monitoring" | param == "sanction")%>%mutate(monitoring = ifelse(param == "monitoring", as.numeric(as.character(variableValue)), 0.5), sanction = ifelse(param == "sanction", as.numeric(as.character(variableValue)), 5)/10 )
mon_sanc_lm = lm(TotalBM*100 ~ K + monitoring + sanction, data = mon_sanc_data)
summary(mon_sanc_lm)
mon_sanc_data = allData%>%filter(param == "monitoring" | param == "sanction")%>%mutate(monitoring = ifelse(param == "monitoring", as.numeric(as.character(variableValue)), 0.5), sanction = ifelse(param == "sanction", as.numeric(as.character(variableValue)), 5)/10 )
mon_sanc_lm = lm(TotalBM*100 ~ K + monitoring + sanction, data = mon_sanc_data)
summary(mon_sanc_lm)
mon_sanc_data = allData_revised%>%filter(param == "monitoring" | param == "sanction")%>%mutate(monitoring = ifelse(param == "monitoring", as.numeric(as.character(variableValue)), 0.5), sanction = ifelse(param == "sanction", as.numeric(as.character(variableValue)), 5)/10 )
mon_sanc_lm = lm(TotalBM*100 ~ K + monitoring + sanction, data = mon_sanc_data)
summary(mon_sanc_lm)
knitr::opts_chunk$set(echo = FALSE)
#setwd("~/Documents/coding_projects/IS_organized/analysis")
library(tidyverse)
library(grid)
library(gridExtra)
library(ggpubr)
library(colorspace)
library(png)
savePlots = TRUE # determine if running this file should save new plots
print(paste("Mean BM%:", mean(check_steadstate$TotalBM))
print(paste("Mean BM%:", mean(check_steadstate$TotalBM)))
print(paste("Mean BM%:", mean(check_steadstate$TotalBM)))
print(paste("Mean BM%:", round(mean(check_steadstate$TotalBM), 3))
print(paste("Mean BM%:", round(mean(check_steadstate$TotalBM), 3)))
print(paste("Mean BM%:", round(mean(check_steadstate$TotalBM)),3))
print(paste("Mean BM%:", round(mean(check_steadstate$TotalBM),3)))
print(paste("SD BM%:", round(sd(check_steadstate$TotalBM),3)))
# order levels for plot
levels(mincut_bravo30$MC.level)
max((mincut_bravo30%>%filter(MC.level == "midMC30"))$NumLogMC)
print(paste("Mean BM%:", round(txt,3)))
txt = max((mincut_bravo30%>%filter(MC.level == "midMC30"))$NumLogMC)
print(paste("Mean BM%:", round(txt,3)))
print(paste("Max Loggers older than 30 periods with medium MC:", round(txt,3)), "%")
txt = max((mincut_bravo30%>%filter(MC.level == "midMC30"))$NumLogMC)
print(paste("Max Loggers older than 30 periods with medium MC:", round(txt,3)), "%")
print(paste("Max Loggers older than 30 periods with medium MC:", round(txt,3), "%"))
baseData_vallinoCorrected%>%summarize(mean(TotalBM))*100
viz_surv = enfGraphCorrected %>% filter(enfValue !=0)%>%ggplot(aes(x = numLoggers*100, y = TotalBM*100, color = enfValue))+
geom_point(aes(color = enfValue), size = 2)+
labs(color = ax_mon, x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs+colorDiscrete
viz_surv
viz_surv = enfGraphCorrected %>% filter(enfValue !=0)%>%ggplot(aes(x = numLoggers*100, y = TotalBM*100, color = enfValue))+
geom_point(aes(color = enfValue), size = 2)+
labs(color = ax_mon, x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs+colorCont
viz_surv
enfGraphCorrected=enfData_vallinoCorrected%>%mutate(enfValue=rev(((as.numeric(variableValue)-1)/10)))
viz_surv = enfGraphCorrected %>% filter(enfValue !=0)%>%ggplot(aes(x = numLoggers*100, y = TotalBM*100, color = enfValue))+
geom_point(aes(color = enfValue), size = 2)+
labs(color = ax_mon, x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs+colorCont
viz_surv
viz_surv = enfGraphCorrected %>% filter(enfValue !=0)%>%ggplot(aes(x = numLoggers*100, y = TotalBM*100, color = enfValue))+
geom_point(aes(color = enfValue), size = 2)+
labs(color = ax_mon, x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs + scale_color_brewer(palette="Spectral")
viz_surv
enfGraphCorrected=enfData_vallinoCorrected%>%mutate(enfValue=rev(as.factor((as.numeric(variableValue)-1)/10)))
viz_surv = enfGraphCorrected %>% filter(enfValue !=0)%>%ggplot(aes(x = numLoggers*100, y = TotalBM*100, color = enfValue))+
geom_point(aes(color = enfValue), size = 2)+
labs(color = ax_mon, x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs + scale_color_brewer(palette="Spectral")
viz_surv
viz_surv = enfGraphCorrected %>% filter(enfValue !=0)%>%ggplot(aes(x = numLoggers*100, y = TotalBM*100, color = enfValue))+
geom_point(aes(color = enfValue), size = 2, alpha = 0.5)+
labs(color = ax_mon, x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs + scale_color_brewer(palette="Spectral")
viz_surv
viz_surv = enfGraphCorrected %>% filter(enfValue !=0)%>%ggplot(aes(x = numLoggers*100, y = TotalBM*100, color = enfValue))+
geom_point(aes(color = enfValue), size = 2, alpha = 0.3)+
labs(color = ax_mon, x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs + scale_color_brewer(palette="Spectral")
viz_surv
if(savePlots) ggsave("./figs/viz_vallino_mon.pdf", viz_surv, width=5.75, height=3, units="in")
plot_ms = allData_revised %>% mutate(lowLoggers = param == "log" & (variableValue == "60" | variableValue == "80"))
viz_ms_KBM = plot_ms %>% ggplot(aes(x = K, y = TotalBM*100, color = lowLoggers))+
geom_point(size = 2)+
labs(x = ax_kf, y = axlab_bm, color = "")+
scale_color_manual(breaks=c(TRUE, FALSE), labels = c("60 or 80 Loggers", "All other parameter sets"), values=c(color1, color2))+
setGraphs#+colorDiscrete
viz_ms_KBM
if(savePlots) ggsave("./figs/viz_ms_KBM.pdf", viz_ms_KBM, width=5.75, height=3, units="in")
fig = fig+1
plot_ms = allData_revised %>% mutate(lowLoggers = param == "log" & (variableValue == "60" | variableValue == "80"))
viz_ms_KBM = plot_ms %>% ggplot(aes(x = K, y = TotalBM*100, color = lowLoggers))+
geom_point(size = 2)+
labs(x = ax_kf, y = axlab_bm, color = "")+
scale_color_manual(breaks=c(TRUE, FALSE), labels = c("60 or 80 Loggers", "All other parameter sets"), values=c(color1, color2))+
setGraphs+colorDiscrete
viz_ms_KBM
if(savePlots) ggsave("./figs/viz_ms_KBM_allData_revise.pdf", viz_ms_KBM, width=5.75, height=3, units="in")
fig = fig+1
plot_ms = allData_revised %>% mutate(lowLoggers = param == "log" & (variableValue == "60" | variableValue == "80"))
viz_ms_KBM = plot_ms %>% ggplot(aes(x = K, y = TotalBM*100, color = lowLoggers))+
geom_point(size = 2)+
labs(x = ax_kf, y = axlab_bm, color = "")+
scale_color_manual(breaks=c(TRUE, FALSE), labels = c("60 or 80 Loggers", "All other parameter sets"), values=c(color1, color2))+
setGraphs#+colorDiscrete
viz_ms_KBM
if(savePlots) ggsave("./figs/viz_ms_KBM_allData_revise.pdf", viz_ms_KBM, width=5.75, height=3, units="in")
fig = fig+1
enfGraphCorrected=enfData_vallinoCorrected%>%mutate(enfValue=rev(as.factor((as.numeric(variableValue)-1)/10)))
viz_surv = enfGraphCorrected %>% filter(enfValue !=0)%>%ggplot(aes(x = numLoggers*100, y = TotalBM*100, color = enfValue))+
geom_point(aes(color = enfValue), size = 2, alpha = 0.3)+
labs(color = ax_mon, x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs + scale_color_brewer(palette="Spectral")
viz_surv
if(savePlots) ggsave("./figs/viz_vallino_mon.pdf", viz_surv, width=5.75, height=3, units="in")
fig = fig+1
viz_surv = enfGraphCorrected %>% filter(enfValue !=0)%>%ggplot(aes(x = numLoggers*100, y = TotalBM*100, color = enfValue))+
geom_point(aes(color = enfValue), size = 1, alpha = 0.3)+
labs(color = ax_mon, x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs + scale_color_brewer(palette="Spectral")
viz_surv
viz_surv = enfGraphCorrected %>% filter(enfValue !=0)%>%ggplot(aes(x = numLoggers*100, y = TotalBM*100, color = enfValue))+
geom_point(aes(color = enfValue), size = 1, alpha = 0.5)+
labs(color = ax_mon, x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs + scale_color_brewer(palette="Spectral")
viz_surv
if(savePlots) ggsave("./figs/viz_vallino_mon.pdf", viz_surv, width=5.75, height=3, units="in")
enfGraphCorrected=enfData_vallinoCorrected%>%mutate(enfValue=rev(as.factor((as.numeric(variableValue)-1)/10)))
viz_surv = enfGraphCorrected %>% filter(enfValue !=0)%>%ggplot(aes(x = numLoggers*100, y = TotalBM*100, color = enfValue))+
geom_point(aes(color = enfValue), size = 1, alpha = 0.5)+
labs(color = ax_mon, x = "Loggers (% remaining)", y = axlab_bm)+
setGraphs + scale_color_brewer(palette="Spectral")
viz_surv
if(savePlots) ggsave("./figs/viz_vallino_mon.pdf", viz_surv, width=5.75, height=3, units="in")
fig = fig+1
if(savePlots) ggsave("./figs/viz_vallino_mon_revised.pdf", viz_surv, width=5.75, height=3, units="in")
vallinoCorrected_lm_data = enfData_vallinoCorrected %>%mutate(monLevel = (1-as.numeric(as.character(variableValue))/100))%>% filter(monLevel!=0)#%>%mutate(monLevel = (1-as.numeric(as.character(variableValue))/100), anyEnf = ifelse(monLevel!=0, TRUE, FALSE))
vallinoCorrected_lm = lm(TotalBM*100 ~ numLoggers+K+monLevel, data = vallinoCorrected_lm_data)
summary(vallinoCorrected_lm)
#this correlation is -.993 (which is high, as it should be)
cor(vallinoCorrected_lm_data$numLoggers, vallinoCorrected_lm_data$TotalBM)
cor(enfData_vallinoCorrected$numLoggers, enfData_vallinoCorrected$TotalBM)

#rt_boxplot<-rtData%>%ggplot(aes(x=variableValue, y=TotalBM, fill=eval(parse(text = fillVariable))))+
rt_boxplot<-rtData2%>%ggplot(aes(x=variableValue, y=TotalBM, fill=meanCheat))+
geom_boxplot()+
fillCont+
#scale_fill_viridis()+
ggtitle("rt")+
theme_classic()
rt_boxplot
x<-maxK(dataRT, seq(1,10, by=1), 2000, 50)
maxK<-function(dataIn, variableValues, ticks, runs){
varNames<- paste("K", variableValues, sep=".")
dataFormatted<- makeDF(dataIn, "K",varNames , ticks, runs)
maxK<-sapply(dataFormatted, max, na.rm = TRUE)
return(maxK)
}
x<-maxK(dataRT, seq(1,10, by=1), 2000, 50)
#jumps_test<-findKJumps(dataRT, seq(1,10, by=1), 2000, 50)
numberJumps<-findKJumps(dataRT, seq(1,10, by=1), 2000, 50)
whenFinalJump<-findFinalKJumps(dataRT, seq(1,10, by=1), 2000, 50)
numberJumps2<-numberJumps%>%gather(key="variableValue", value=variableOfInterest)%>%separate(col = variableValue, into = c("type", "variableValue"))
jumpDF<-data.frame(maxK=x, jumps=numberJumps2$variableOfInterest, K=rtData$K, TotalBM=rtData$TotalBM, variableValue=rtData$variableValue, cheaters=rtData$numCheaters)
whenFinalJump2<-whenFinalJump%>%gather(key="variableValue", value=variableOfInterest)%>%separate(col = variableValue, into = c("type", "variableValue"))
rtJumpData<-data.frame(maxK=x, numJumps = numberJumps2$variableOfInterest, finalJump=whenFinalJump2$variableOfInterest, K=rtData$K, TotalBM=rtData$TotalBM, variableValue=rtData$variableValue, cheaters=rtData$numCheaters)
rtJumpData<- rtJumpData%>%mutate(recentMeeting = finalJump>20)
rtJumpData<- rtJumpData%>%mutate(jumpCat = ifelse(as.numeric(numJumps)<2,"once", ifelse(as.numeric(numJumps)<3, "twice","3+ times")))%>%mutate(jumpCat=factor(jumpCat))
rtJumpData%>%ggplot(aes(variableValue, round(K,1)))+
geom_count(aes(color=jumpCat, shape=recentMeeting), alpha=0.7)+
scale_color_brewer(palette="Dark2",name="number of meetings")+
#  scale_color_viridis(name="reference-threshold")+
#  xlim(0,6.2)+
labs(x="reference-threshold", y="final institution, K_f")+
theme_classic()
rtJumpData%>%ggplot(aes(variableValue, round(K,1)))+
geom_point(aes(color=jumpCat, shape=recentMeeting), alpha=0.7)+
scale_color_brewer(palette="Dark2",name="number of meetings")+
#  scale_color_viridis(name="reference-threshold")+
#  xlim(0,6.2)+
labs(x="reference-threshold", y="final institution, K_f")+
theme_classic()
rtJumpData%>%ggplot(aes(variableValue, round(K,1)))+
geom_count(aes(color=jumpCat, shape=recentMeeting), alpha=0.7, position="jitter")+
scale_color_brewer(palette="Dark2",name="number of meetings")+
#  scale_color_viridis(name="reference-threshold")+
#  xlim(0,6.2)+
labs(x="reference-threshold", y="final institution, K_f")+
theme_classic()
rtJumpData%>%ggplot(aes(variableValue, round(K,1)))+
geom_point(aes(color=jumpCat, shape=recentMeeting), alpha=0.7, position="jitter")+
scale_color_brewer(palette="Dark2",name="number of meetings")+
#  scale_color_viridis(name="reference-threshold")+
#  xlim(0,6.2)+
labs(x="reference-threshold", y="final institution, K_f")+
theme_classic()
sancBM_graph<-sanctionData%>%ggplot(aes(x=variableValue, y=TotalBM))+
geom_boxplot()+
ggtitle("sanction, BM%")+
theme_classic()
# increased monitoring decreases cheaters (yay!)
monBM_graph<-monitoringData%>%ggplot(aes(x=variableValue, y=TotalBM))+
geom_boxplot()+
ggtitle("monitoring, BM%")+
theme_classic()
# increased sanctioning decreases cheaters (yay!)
sancCheaters_graph<-sanctionData%>%ggplot(aes(x=variableValue, y=numCheaters))+
geom_boxplot()+
ggtitle("sanction, number of cheaters")+
theme_classic()
# increased monitoring decreases cheaters (yay!)
monCheaters_graph<-monitoringData%>%ggplot(aes(x=variableValue, y=numCheaters))+
geom_boxplot()+
ggtitle("monitoring, number of cheaters")+
theme_classic()
grid.arrange(sancBM_graph, monBM_graph, sancCheaters_graph, monCheaters_graph, nrow=2)
cor(allData$TotalBM, allData$K)
cor(baseData$TotalBM, baseData$K)
cor((allData%>%filter(numLoggers!=60))$TotalBM, (allData%>%filter(numLoggers!=60))$K)
cor(allData$TotalBM, allData$K)
cor((allData_plotK_BM%>%filter(!logger60))$TotalBM, (allData_plotK_BM%>%filter(!logger60))$K)
cor(baseData$TotalBM, baseData$K)
cor((allData_plotK_BM%>%filter(!logger60))$TotalBM, (allData_plotK_BM%>%filter(!logger60))$K)
cor(baseData$TotalBM, baseData$K)
cor(baseData$TotalBM, baseData$K)
cor(allData$TotalBM, allData$K)
cor((allData_plotK_BM%>%filter(!logger60))$TotalBM, (allData_plotK_BM%>%filter(!logger60))$K)
rtData2%>%ggplot(aes(x=variableValue, y=TotalBM, color=meanCheat))+
geom_point()+
fillCont+
#scale_fill_viridis()+
ggtitle("rt")+
theme_classic()
rtData2%>%ggplot(aes(x=variableValue, y=TotalBM, color=numCheaters))+
geom_point()+
fillCont+
#scale_fill_viridis()+
ggtitle("rt")+
theme_classic()
rtData2%>%ggplot(aes(x=variableValue, y=TotalBM, color=numCheaters))+
geom_point()+
colorCont+
#scale_fill_viridis()+
ggtitle("rt")+
theme_classic()
rtData2%>%ggplot(aes(x=variableValue, y=TotalBM, color=numCheaters))+
geom_point(position="jitter")+
colorCont+
#scale_fill_viridis()+
ggtitle("rt")+
theme_classic()
baseData%>%ggplot(aes(x=TotalBM, fill=1))+
geom_density(alpha=.3)+
geom_density(data=baseData_vallino, aes(x=TotalBM, fill=NULL), linetype="dashed")+
xlim(0,1)+
theme(legend.position = 'none')
dist_viz = grid.arrange(viz_mon, viz_sanc, nrow=1)
ggsave("dist_viz.pdf", width = 20, height = 20, units = "cm")
grid.arrange(viz_mon, viz_sanc, nrow=1)
ggsave("dist_viz.pdf", width = 20, height = 20, units = "cm")
ggsave("dist_viz.pdf", width = 20, height = 10, units = "cm")
g=grid.arrange(viz_mon, viz_sanc, nrow=1)
ggsave("dist_viz.pdf", g, width = 20, height = 10, units = "cm")
ggsave("dist_viz.png", g, width = 20, height = 10, units = "cm")
ggsave("dist_viz.png", g, width = 25, height = 10, units = "cm")
viz_mon<-cheatProb_distribution%>%filter(variable=="mon.1"|variable=="Sanc.5"|variable=="mon.9")%>%ggplot()+geom_histogram(aes(x=cheaters, fill=variable), position="dodge", binwidth = 0.2)+
labs(x="probability of cheating")+
xlim(-0.1,1)+
scale_fill_discrete(name = "monitoring-level", labels = c("0.1", "0.5", "0.9"))+
setGraphs+
colorDiscrete
viz_sanc<-cheatProb_distribution%>%filter(variable=="Sanc.1"|variable=="Sanc.9"|variable=="Sanc.5")%>%ggplot()+geom_histogram(aes(x=cheaters, fill=variable), position="dodge", binwidth = 0.2)+
labs(x="probability of cheating")+
xlim(-0.1,1)+
scale_fill_discrete(name = "sanction-level", labels = c("0.1", "0.5", "0.9"))+
setGraphs+
colorDiscrete
viz_mon<-cheatProb_distribution%>%filter(variable=="mon.1"|variable=="Sanc.5"|variable=="mon.9")%>%ggplot()+geom_histogram(aes(x=cheaters, fill=variable), position="dodge", binwidth = 0.2)+
labs(x="probability of cheating")+
xlim(-0.1,1)+
scale_fill_discrete(name = "monitoring-level", labels = c("0.1", "0.5", "0.9"))+
setGraphs+
fillDiscrete
viz_sanc<-cheatProb_distribution%>%filter(variable=="Sanc.1"|variable=="Sanc.9"|variable=="Sanc.5")%>%ggplot()+geom_histogram(aes(x=cheaters, fill=variable), position="dodge", binwidth = 0.2)+
labs(x="probability of cheating")+
xlim(-0.1,1)+
scale_fill_discrete(name = "sanction-level", labels = c("0.1", "0.5", "0.9"))+
setGraphs+
fillDiscrete
g=grid.arrange(viz_mon, viz_sanc, nrow=1)
g=grid.arrange(viz_mon, viz_sanc, nrow=1)
ggsave("dist_viz.png", g, width = 25, height = 10, units = "cm")
#library(ggplot2)
#library(dplyr)
library(patchwork)
setwd("~/Documents/WoosterStuff/fall2019/IS")
library(tidyverse)
library(ggthemes)
library(gridExtra)
#library(ggplot2)
#library(dplyr)
library(patchwork)
library(ggforce)
#library(pheatmap)
library(ggpubr)
setwd("~/Documents/WoosterStuff/fall2019/IS")
read.csv("ExampleABM.csv")
data_example%>%ggplot(aes(x=1:150))+
geom_path(aes(y=BM.1[0:150]))
data_example = read.csv("ExampleABM.csv")
data_example%>%ggplot(aes(x=1:150))+
geom_path(aes(y=BM.1[0:150]))
data_example%>%ggplot(aes(x=1:147))+
geom_path(aes(y=BM.1[0:147]))
data_example%>%ggplot(aes(x=1:147))+
geom_path(aes(y=BM.1[0:147]))+
geom_path(aes(y=BM.2[0:147]))+
geom_path(aes(y=BM.2[0:147]))
color="Set2"
axlab_size <- 12
axtick_size <- 10
ax_kf = expression(paste(bolditalic("final-institution")))
axlab_bm<-"Biomass (% remaining)"
axlab_density <- "Density"
axlab_time <- "Period"
axlab_perc <- "Percent remianing"
# make graph look nice by adding this to the end
setGraphs<- theme_bw()+
theme(axis.text=element_text(size=axtick_size, color="black"),
axis.title=element_text(size=axlab_size,face="bold", color="black"), legend.text = element_text(size=axtick_size))+
theme(panel.border = element_blank(), axis.line = element_line(colour = "black"))
#  scale_color_stata()
# scale_color_brewer(palette="Set1")
#colorDiscrete = scale_color_brewer(palette="Dark2")
colorDiscrete = scale_color_brewer(palette="Set2")
colorCont = scale_color_viridis_c(option = "magma")
#fillDiscrete = scale_fill_brewer(palette="Dark2")
fillDiscrete = scale_fill_brewer(palette="Set2")
fillCont = scale_fill_viridis_c(option = "magma")
# first two colors in Dark2
#1b9e77
#d95f02
color1="#66c2a5"
color2="#fc8d62"
color3="#8da0cb"
# scale_color_colorblind()
# scale_color_OkabeIto()
point_size = 3
line_size = 1.2
data_example%>%ggplot(aes(x=1:147))+
geom_path(aes(y=BM.1[0:147]), color=color1)+
geom_path(aes(y=BM.2[0:147]), color=color2)+
geom_path(aes(y=BM.3[0:147]), color=color3)
data_example%>%ggplot(aes(x=1:147))+
geom_path(aes(y=BM.1[0:147]), color=color1)+
geom_path(aes(y=BM.2[0:147]), color=color2)+
geom_path(aes(y=BM.3[0:147]), color=color3)+
setGraphs
data_example%>%ggplot(aes(x=1:147))+
geom_path(aes(y=BM.1[0:147]), color=color1, size=line_size)+
geom_path(aes(y=BM.2[0:147]), color=color2)+
geom_path(aes(y=BM.3[0:147]), color=color3)+
setGraphs
data_example%>%ggplot(aes(x=1:147), size=line_size)+
geom_path(aes(y=BM.1[0:147]), color=color1)+
geom_path(aes(y=BM.2[0:147]), color=color2)+
geom_path(aes(y=BM.3[0:147]), color=color3)+
setGraphs
data_example%>%ggplot(aes(x=1:147, size=line_size))+
geom_path(aes(y=BM.1[0:147]), color=color1)+
geom_path(aes(y=BM.2[0:147]), color=color2)+
geom_path(aes(y=BM.3[0:147]), color=color3)+
setGraphs
data_example%>%ggplot(aes(x=1:147))+
geom_path(aes(y=BM.1[0:147]), color=color1, size=line_size)+
geom_path(aes(y=BM.2[0:147]), color=color2, size=line_size)+
geom_path(aes(y=BM.3[0:147]), color=color3, size=line_size)+
setGraphs
setwd("~/Documents/WoosterStuff/fall2019/IS")
data_example = read.csv("ExampleABM.csv")
# 100 initial loggers
data_example%>%ggplot(aes(x=1:147))+
geom_path(aes(y=BM.1[0:147]), color=color1, size=line_size)+
geom_path(aes(y=BM.2[0:147]), color=color2, size=line_size)+
geom_path(aes(y=BM.3[0:147]), color=color3, size=line_size)+
setGraphs
data_example = read.csv("ExampleABM.csv")
data_example
# 100 initial loggers
data_example%>%ggplot(aes(x=1:147))+
geom_path(aes(y=BM.1[0:147]), color=color1, size=line_size)+
geom_path(aes(y=BM.2[0:147]), color=color2, size=line_size)+
geom_path(aes(y=BM.3[0:147]), color=color3, size=line_size)+
setGraphs
# 100 initial loggers
data_example%>%ggplot(aes(x01:147))+
geom_path(aes(y=BM.1[0:147]), color=color1, size=line_size)+
geom_path(aes(y=BM.2[0:147]), color=color2, size=line_size)+
geom_path(aes(y=BM.3[0:147]), color=color3, size=line_size)+
setGraphs
# 100 initial loggers
data_example%>%ggplot(aes(x=0:147))+
geom_path(aes(y=BM.1[0:147]), color=color1, size=line_size)+
geom_path(aes(y=BM.2[0:147]), color=color2, size=line_size)+
geom_path(aes(y=BM.3[0:147]), color=color3, size=line_size)+
setGraphs
data_example[0]
data_example[1]
data_example[1][1]
# 100 initial loggers
data_example%>%ggplot(aes(x=1:147))+
geom_path(aes(y=BM.1[1:147]), color=color1, size=line_size)+
geom_path(aes(y=BM.2[1:147]), color=color2, size=line_size)+
geom_path(aes(y=BM.3[1:147]), color=color3, size=line_size)+
setGraphs
data_example = read.csv("ExampleABM.csv")
# 100 initial loggers
data_example%>%ggplot(aes(x=1:147))+
geom_path(aes(y=BM.1[1:147]), color=color1, size=line_size)+
geom_path(aes(y=BM.2[1:147]), color=color2, size=line_size)+
geom_path(aes(y=BM.3[1:147]), color=color3, size=line_size)+
setGraphs
dim(data_example)
BM.1[1:147]
data_example$BM.1[1:147]
data_example = read.csv("ExampleABM.csv")
dim(data_example)
data_example$BM.1[1:147]
# 100 initial loggers
data_example%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.1[1:126]), color=color1, size=line_size)+
geom_path(aes(y=BM.2[1:126]), color=color2, size=line_size)+
geom_path(aes(y=BM.3[1:126]), color=color3, size=line_size)+
setGraphs
data_example = read.csv("ExampleABM.csv")
dim(data_example)
# 100 initial loggers
data_example%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.1[1:126]), color=color1, size=line_size)+
geom_path(aes(y=BM.2[1:126]), color=color2, size=line_size)+
geom_path(aes(y=BM.3[1:126]), color=color3, size=line_size)+
setGraphs
data_example = read.csv("ExampleABM.csv")
dim(data_example)
# 100 initial loggers
data_example[1:126,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.1), color=color1, size=line_size)+
geom_path(aes(y=BM.2), color=color2, size=line_size)+
geom_path(aes(y=BM.3), color=color3, size=line_size)+
setGraphs
data_example%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.50.1), color=color1, size=line_size)+
geom_path(aes(y=BM.50.2), color=color2, size=line_size)+
geom_path(aes(y=BM.50.3), color=color3, size=line_size)+
setGraphs
data_example = read.csv("ExampleABM.csv")
dim(data_example)
# 100 initial loggers
data_example[1:126,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.1), color=color1, size=line_size)+
geom_path(aes(y=BM.2), color=color2, size=line_size)+
geom_path(aes(y=BM.3), color=color3, size=line_size)+
setGraphs
data_example[1:126,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.50.1), color=color1, size=line_size)+
geom_path(aes(y=BM.50.2), color=color2, size=line_size)+
geom_path(aes(y=BM.50.3), color=color3, size=line_size)+
setGraphs
data_example = read.csv("ExampleABM.csv")
dim(data_example)
# 100 initial loggers
data_example[1:126,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.1), color=color1, size=line_size)+
geom_path(aes(y=BM.2), color=color2, size=line_size)+
geom_path(aes(y=BM.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)
data_example[1:126,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.50.1), color=color1, size=line_size)+
geom_path(aes(y=BM.50.2), color=color2, size=line_size)+
geom_path(aes(y=BM.50.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)
data_example = read.csv("ExampleABM.csv")
dim(data_example)
# 100 initial loggers
data_example[1:126,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.1), color=color1, size=line_size)+
geom_path(aes(y=BM.2), color=color2, size=line_size)+
geom_path(aes(y=BM.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,126)
data_example[1:126,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.50.1), color=color1, size=line_size)+
geom_path(aes(y=BM.50.2), color=color2, size=line_size)+
geom_path(aes(y=BM.50.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,126)
data_example = read.csv("ExampleABM.csv")
dim(data_example)
# 100 initial loggers
data_example[1:126,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.1), color=color1, size=line_size)+
geom_path(aes(y=BM.2), color=color2, size=line_size)+
geom_path(aes(y=BM.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,126)+
labels(x="Time", y="Tree biomass")
data_example = read.csv("ExampleABM.csv")
dim(data_example)
# 100 initial loggers
data_example[1:126,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.1), color=color1, size=line_size)+
geom_path(aes(y=BM.2), color=color2, size=line_size)+
geom_path(aes(y=BM.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,126)+
labs(x="Time", y="Tree biomass")
data_example[1:126,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.50.1), color=color1, size=line_size)+
geom_path(aes(y=BM.50.2), color=color2, size=line_size)+
geom_path(aes(y=BM.50.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,126)+
labs(x="Time", y="Tree biomass")
data_example = read.csv("ExampleABM.csv")
dim(data_example)
# 100 initial loggers
v1=data_example[1:126,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.1), color=color1, size=line_size)+
geom_path(aes(y=BM.2), color=color2, size=line_size)+
geom_path(aes(y=BM.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,126)+
labs(x="Time", y="Tree biomass")
v2=data_example[1:126,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.50.1), color=color1, size=line_size)+
geom_path(aes(y=BM.50.2), color=color2, size=line_size)+
geom_path(aes(y=BM.50.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,126)+
labs(x="Time", y="Tree biomass")
grid.arrange(v1,v2, nrow=1)
v1
v2
# 100 initial loggers
v1=data_example[1:100,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.1), color=color1, size=line_size)+
geom_path(aes(y=BM.2), color=color2, size=line_size)+
geom_path(aes(y=BM.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,126)+
labs(x="Time", y="Tree biomass")
v2=data_example[1:100,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.50.1), color=color1, size=line_size)+
geom_path(aes(y=BM.50.2), color=color2, size=line_size)+
geom_path(aes(y=BM.50.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,126)+
labs(x="Time", y="Tree biomass")
v1
# 100 initial loggers
v1=data_example[1:100,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.1), color=color1, size=line_size)+
geom_path(aes(y=BM.2), color=color2, size=line_size)+
geom_path(aes(y=BM.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,126)+
labs(x="Time", y="Tree biomass")
v2=data_example[1:100,]%>%ggplot(aes(x=1:126))+
geom_path(aes(y=BM.50.1), color=color1, size=line_size)+
geom_path(aes(y=BM.50.2), color=color2, size=line_size)+
geom_path(aes(y=BM.50.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,126)+
labs(x="Time", y="Tree biomass")
v1
# 100 initial loggers
v1=data_example[1:100,]%>%ggplot(aes(x=1:100))+
geom_path(aes(y=BM.1), color=color1, size=line_size)+
geom_path(aes(y=BM.2), color=color2, size=line_size)+
geom_path(aes(y=BM.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,126)+
labs(x="Time", y="Tree biomass")
v2=data_example[1:100,]%>%ggplot(aes(x=1:100))+
geom_path(aes(y=BM.50.1), color=color1, size=line_size)+
geom_path(aes(y=BM.50.2), color=color2, size=line_size)+
geom_path(aes(y=BM.50.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,126)+
labs(x="Time", y="Tree biomass")
v1
data_example = read.csv("ExampleABM.csv")
dim(data_example)
# 100 initial loggers
time=100
v1=data_example[1:time,]%>%ggplot(aes(x=1:time))+
geom_path(aes(y=BM.1), color=color1, size=line_size)+
geom_path(aes(y=BM.2), color=color2, size=line_size)+
geom_path(aes(y=BM.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,time)+
labs(x="Time", y="Tree biomass")
v2=data_example[1:time,]%>%ggplot(aes(x=1:time))+
geom_path(aes(y=BM.50.1), color=color1, size=line_size)+
geom_path(aes(y=BM.50.2), color=color2, size=line_size)+
geom_path(aes(y=BM.50.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,time)+
labs(x="Time", y="Tree biomass")
v1
v2
#grid.arrange(v1,v2, nrow=1)
data_example = read.csv("ExampleABM.csv")
dim(data_example)
# 100 initial loggers
time=75
v1=data_example[1:time,]%>%ggplot(aes(x=1:time))+
geom_path(aes(y=BM.1), color=color1, size=line_size)+
geom_path(aes(y=BM.2), color=color2, size=line_size)+
geom_path(aes(y=BM.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,time)+
labs(x="Time", y="Tree biomass")
v2=data_example[1:time,]%>%ggplot(aes(x=1:time))+
geom_path(aes(y=BM.50.1), color=color1, size=line_size)+
geom_path(aes(y=BM.50.2), color=color2, size=line_size)+
geom_path(aes(y=BM.50.3), color=color3, size=line_size)+
setGraphs+
ylim(0,41000)+
xlim(0,time)+
labs(x="Time", y="Tree biomass")
v1
v2
grid.arrange(v1,v2, nrow=1)
v3=grid.arrange(v1,v2, nrow=1)
ggsave("viz_pres.pdf", v3, width=6, height=4, units="in")
ggsave("viz_pres.pdf", v3, width=8, height=3, units="in")
